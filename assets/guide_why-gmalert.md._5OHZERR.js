import{G as r,a as s,n as i,m as o}from"./chunks/GmBtn.sdTJEQm7.js";import{o as n,c,k as t,I as m,w as d,m as e,a,R as _}from"./chunks/framework.oh-BXy59.js";const p=t("h1",{id:"为什么选择gmalert",tabindex:"-1"},[a("为什么选择GmAlert "),t("a",{class:"header-anchor",href:"#为什么选择gmalert","aria-label":'Permalink to "为什么选择GmAlert"'},"​")],-1),h=_('<p>GmAlert 是一个基于原生js的轻量多合一浏览器弹出层组件，我们提供了 alert，message，notice，information 四个核心模块，而且每个模块都有 error, warning，success，info，loading 的预定样式。在保持轻量(css+js 18kb)的同时，尽可能的保证了功能的完善与易用</p><ul><li>🪶 轻量至极的设计，18kb的全量体积，而且支持按需引入</li><li>🔒 我们使用 ts + eslint 编程，安全是我们考虑的首要目标</li><li>🆗 提供完整的类型支持</li><li>👌 简单易用的api</li></ul><h2 id="用例" tabindex="-1">用例 <a class="header-anchor" href="#用例" aria-label="Permalink to &quot;用例&quot;">​</a></h2><ul><li><p><strong>项目没有一个合适的消息组件</strong></p><p>如果你的项目使用原生js构建，或者使用的组件库没有提供一个功能完善的消息组件，那么你可以很轻松的使用GmAlert来完善你的项目，因为GmAlert不依赖任何框架，可以引入任何基于浏览器的项目</p></li><li><p><strong>寻找一个极其轻量的消息组件</strong></p><p>GmAlert即使全功能引入也只有18kb的内容, 而且我们提供了esm模块来实现treeshake，你可以按需引入你需要的组件</p></li></ul>',4),G=JSON.parse('{"title":"为什么选择GmAlert","description":"","frontmatter":{},"headers":[],"relativePath":"guide/why-gmalert.md","filePath":"guide/why-gmalert.md","lastUpdated":1701623627000}'),u={name:"guide/why-gmalert.md"},b=Object.assign(u,{setup(g){return(f,k)=>(n(),c("div",null,[p,t("p",null,[m(r,{onClick:()=>{e(s)({content:"Hello",text:"world",showConfirm:!0,showCancel:!0,onClosed(l){l===1?e(i)("你点击了确认"):e(o)("你点击了取消")}})}},{default:d(()=>[a("点我试试")]),_:1},8,["onClick"])]),h]))}});export{G as __pageData,b as default};
